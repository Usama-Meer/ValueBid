@model ValueBid.Models.Listing

<!--imported asp.net and injected user manager-->
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Listing</h1>

<h4>@Model.Title</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <!--added enctype="multipart/form-data-->
        <form asp-action="Edit" enctype="multipart/form-data" method="Post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" placeholder="@Model.Title />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" placeholder="@Model.Description" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">

                <!--added starting bid-->
                <label asp-for="Price" class="control-label">Starting Bid</label>
                <input asp-for="Price" class="form-control" placeholder="@Model.Price" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            


            <div class="form-group">

                <input type="hidden" asp-for="IdentityUserId" class="form-control" value="@userManager.GetUserId(User)" />
            </div>

            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
